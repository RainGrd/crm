package com.crm.workbench.mapper;

import com.crm.workbench.entity.Activity;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

@Mapper
public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Fri Aug 26 16:26:55 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Fri Aug 26 16:26:55 CST 2022
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     * 根据id查找数据
     * @mbggenerated Fri Aug 26 16:26:55 CST 2022
     */
    Activity selectActivityById(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Fri Aug 26 16:26:55 CST 2022
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     * 用于市场活动更改功能
     * @mbggenerated Fri Aug 26 16:26:55 CST 2022
     */
    int updateActivityById(Activity record);

    /**
     * 保存创建的市场活动
     */
    int insertActivity(Activity activity);

    /**
     * 根据条件查询市场活动
     */
    List<Activity> selectActivityByConditionForPage(@Param("activity") Activity activity);

    /**
     * 根据条件查询所需的次数
     */
    int selectCountOfActivityByCondition(@Param("activity") Activity activity);
    /**
     * 根据id数组批量删除数据
     */
    int deleteActivityByIds(@Param("ids") String[] ids);
    /**
     * 查询所有市场活动
     */
    List<Activity> selectActivityList();
    /**
     * 根据表名查询列名
     */
    List<String> findFieldByTableName(@Param("tableName") String tableName);
    /**
     * 根据id数组选择查询市场活动
     */
    List<Activity> selectActivityByIds(@Param("ids") String[] ids);

    /**
     * 批量保存创建的市场活动
     */
    int insertActivityByList(List<Activity> activityList);
    /**
     * 根据市场活动id查询市场活动明细
     * @param id 市场活动id
     */
    Activity selectActivityForDetailById(String id);
}