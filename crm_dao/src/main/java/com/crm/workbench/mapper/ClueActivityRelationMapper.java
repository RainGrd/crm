package com.crm.workbench.mapper;

import com.crm.workbench.entity.ClueActivityRelation;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface ClueActivityRelationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Thu Sep 15 11:05:26 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Thu Sep 15 11:05:26 CST 2022
     */
    int insert(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Thu Sep 15 11:05:26 CST 2022
     */
    int insertSelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Thu Sep 15 11:05:26 CST 2022
     */
    ClueActivityRelation selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Thu Sep 15 11:05:26 CST 2022
     */
    int updateByPrimaryKeySelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Thu Sep 15 11:05:26 CST 2022
     */
    int updateByPrimaryKey(ClueActivityRelation record);

    /**
     * 插入相关市场活动
     * @param activityRelationList
     * @return
     */
    int insertClueActivityRelationByList(@Param("list") List<ClueActivityRelation> activityRelationList);

    /**
     * 解除关联的市场活动
     */
    int deleteClueRelationByClueIdActivityId(@Param("clueActivityRelation") ClueActivityRelation clueActivityRelation);
    /**
     * 根据clueId查询线索的市场活动的多条关联关系
     */
    List<ClueActivityRelation> clueActivityRelationList(String clueId);

    /**
     * 根据clue删除与之相关的市场活动的关联关系
     * @param clueId
     * @return
     */
    int deleteClueActivityRelationByClueId(String clueId);
}